module Auth
  class PasswordUpdateSchema < Marten::Schema
    setter :email
    getter :user
    field :old_password, :string, max_size: 128, strip: false
    field :new_password, :string, max_size: 128, strip: false
    field :new_confirm_password, :string, max_size: 128, strip: false

    @email : String?
    @user : User?

    validate :validate_password

    private def validate_password
      return unless old_password? && new_password? && new_confirm_password?

      @user = MartenAuth.authenticate(@email.not_nil!, old_password!)

      errors.add("Invalid user password") if @user.nil?

      errors.add("Your new confirmed password does not match") if new_password != new_confirm_password
    end
  end
end
